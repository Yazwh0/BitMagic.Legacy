{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "BitMagic X16 Asm",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#literals"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#opcodes"
		},
		{
			"include": "#labels"
		},
		{
			"include": "#pseudofunctions"
		},
		{
			"include": "#blockstarts"
		},
		{
			"include": "#blockends"
		}
	],
	"repository": {
		"comments": {
			"patterns": [{
				"name": "comment.line.bmasm",
				"match": ";.*$"
			}]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.bmasm",
				"match": "\\b(if|while|for|return)\\b"
			}]
		},
		"literals": {
			"patterns": [{
				"name": "constant.numeric.binary.bmasm",
				"match": "(%[01]+\\b)|(0b[01]+\\b)"
			}, 
			{
				"name": "constant.numeric.hex.bmasm",
				"match": "(\\$[0-9A-Fa-f]+\\b)|(0x[0-9A-Fa-f]+\\b)"
			}, 
			{
				"name": "constant.numeric.decimal.bmasm",
				"match": "\\b[0-9]+\\b"
			}, 
			{
				"name": "constant.language.unnamed-label.bmasm",
				"match": ":-+|:\\++"
			}]
		},
		"strings": {
			"name": "string.quoted.double.bmasm",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.bmasm",
					"match": "\\\\."
				}
			]
		},
		"operators": {
			"patterns": [{
				"name": "keyword.operators.immediate.bmasm",
				"match": "[#|^|<|>]"
			}, 
			{
				"name": "keyword.operators.word.bmasm",
				"match": "\\.(?i:mod|bitnot|bitand|bitor|shl|shr|and|or|not|xor)\\b"
			}, 
			{
				"name": "keyword.operators.misc.bmasm",
				"match": "=|<>|:=|\\+|-|\\*|/|\\&|~|\\||<<|>>|\\&\\&|\\|\\||!|<|>|<=|>="	
			}]
		},
		"opcodes": {
			"patterns": [{
				"comment": "6502 Opcodes",
				"name": "keyword.other.opcode.bmasm.6502",
				"match": "\\b(?i:adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b"
			}, {
				"comment": "65C02 Opcodes",
				"name": "keyword.other.opcode.bmasm.65c02",
				"match": "\\b(?i:bra|phx|phy|plx|ply|stz|trb|tsb|bbr0|bbr1|bbr2|bbr3|bbr4|bbr5|bbr6|bbr7|bbs0|bbs1|bbs2|bbs3|bbs4|bbs5|bbs6|bbs7|rmb0|rmb1|rmb2|rmb3|rmb4|rmb5|rmb6|rmb7|smb0|smb1|smb2|smb3|smb4|smb5|smb6|smb7)\\b"
			}]
		},
		"pseudofunctions": {
			"patterns": [{
				"name": "keyword.control.pseudofunction.bmasm",
				"match": "\\.(?i:byte|word|define|segment|const|pad|align)\\b"
			}]
		},
		"blockstarts": {
			"patterns": [{
				"name": "keyword.control.block.bmasm",
				"contentName": "entity.name.function.bmasm",
				"begin": "\\.(?i:proc|scope|segment)\\s*",
				"end": "\\s"
			}]
		},		
		"blockends": {
			"patterns": [{
				"name": "keyword.control.block.bmasm",
				"match": "\\.(?i:endproc|endscope|endsegment)\\b"
			}]
		},
		"labels": {
			"patterns": [{
				"name": "entity.name.label.bmasm",
				"match": "^.\\S*:"
			}]
		}
	},
	"scopeName": "source.bmasm"
}