.machine CommanderX16R40
.org $801

.byte $0C, $08, $0A, $00, $9E, $20, $32, $30, $36, $34, $00, $00, $00, $00, $00
.org $810
    
    ;jmp ($fffc)
    sei    


    lda #$41        ; enable sprites
    sta DC_VIDEO

    lda #$04        ; bitmap, 1bpp
    sta L0_CONFIG

    lda #$01        ; 16 wide
    sta L0_TILEBASE 

    jsr create_sprites
    jsr init_sprites

    ; set colour 0
    lda #$01
    sta ADDRx_H
    lda #$fa
    sta ADDRx_M
    stz ADDRx_L

    lda #$12
    sta DATA0

    ; set colour 16
    lda #$01
    sta ADDRx_H
    lda #$fa
    sta ADDRx_M
    lda #(16*2+2)
    sta ADDRx_L

    lda #$ff
    sta DATA0

    ldx #$00
    ldy #$00

    lda #01
    sta IEN

.loop:
    wai
    lda ISR
    sta ISR
    and #01
    beq loop

    dey
    bne loop
    
    inx
    bne bitmaptiles

    lda #$11
    sta ADDRx_H
    lda #$fa
    sta ADDRx_M
    stz ADDRx_L

    lda #$12
    sta DATA0
    stz DATA0

    ; set to 1bpp bitmap for least access
    lda #$04        ; bitmap, 1bpp
    sta L0_CONFIG
    sta L1_CONFIG

    jmp loop
.bitmaptiles:
    lda #$11
    sta ADDRx_H
    lda #$fa
    sta ADDRx_M
    stz ADDRx_L

    lda #$03
    stz DATA0
    sta DATA0

    lda #$03        ; 8bpp tiles
    sta L0_CONFIG
    sta L1_CONFIG

    stz L0_TILEBASE 
    stz L1_TILEBASE 

    ldx #$ff
    jmp loop

.proc create_sprites
    ; sprite data
    lda #$10
    sta ADDRx_H
    stz ADDRx_M
    stz ADDRx_L

    ; 8x16 4bpp, with first four pixels filled
    lda #$11

    ldx #10
.loop:
    sta DATA0
    sta DATA0
    stz DATA0
    stz DATA0
    dex
    bne loop

    ldx #6
.lowerloop:
    stz DATA0
    stz DATA0
    stz DATA0
    stz DATA0
    dex
    bne lowerloop

    ldx #16
.loop2:
    sta DATA0
    sta DATA0
    stz DATA0
    stz DATA0
    dex
    bne loop2

    rts

.endproc

.proc init_sprites
    stz $02

    lda #$11
    sta ADDRx_H
    lda #$fc
    sta ADDRx_M
    lda #$00
    sta ADDRx_L

    ldx #128
    ldy #0
.loop:
    
    tya
    and #$1f
    beq long_sprite

    stz DATA0    ; address L
    jmp address_done

.long_sprite:
    lda #02
    sta DATA0    ; address L

.address_done:
    stz DATA0    ; address H + 4bpp

    sty DATA0    ; x

.high_x:
    lda #00
    sta DATA0

    lda #10
    sta DATA0   ; y
    stz DATA0

    lda #$0C
    sta DATA0   ; zdepth
    lda $02
    eor #1
    sta $02
    ora #$40    ; height
    sta DATA0   ; height palette offset

    iny
    iny
    iny
    iny

    bne not_high
    lda #01
    sta high_x+1

.not_high:
    dex
    bne loop

    rts
.endproc