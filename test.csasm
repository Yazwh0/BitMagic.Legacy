reference System.IO.FileSystem
using System.IO

void ColourFunction(string name, ushort colour)
{
	.proc @name
	lda #<@colour
	sta data
	lda #>@colour
	sta data
	rts
}

.define name=rom, address=$a000, filename="rom.bin"
.const data = $abcd

.scope main

; entrypoint
@X16Header();

.const data0 = $9F23
.const data1 = $9F24
.const addr_l = $9F20
.const addr_m = $9F21
.const addr_h = $9F22
.const ctrl = $9f25
.const ien = $9F26
.const isr = $9F27
.const irq_line = $9F28

.const start = $01
.const colourswitch = $00

stz start

lda #$02
sta ien

lda start
sta irq_line

.loop:
jmp loop

.pad $900
.proc vsync

lda colourswitch
bne setcolour

lda #$01
sta addr_h
lda #$fa
sta addr_m
stz addr_l

stz data0

lda #$01
sta colourswitch

lda #$ff
sta irq_line

stz isr

ply
plx
pla
rti

.setcolour:

lda #$01
sta addr_h
lda #$fa
sta addr_m
stz addr_l

lda #$ff
sta data0

inc start
lda start
and #0b01111111

sta irq_line

stz colourswitch

stz isr

ply
plx
pla
rti

.endproc

.segment rom
.byte 1, 2, 3, 4, 5

//ColourFunction("set_white", 0xfff0);
//ColourFunction("set_grey", 0x8880);

var sintable = new byte[32];
for(var i = 0; i < 32; i++)
{
	sintable[i] = (byte)(Math.Sin((i * 360 / 32) * (Math.PI / 180)) * 128 + 128);
}
.sintable:
//@Bytes(sintable);

.datatable:
//@Bytes(new byte[] { 0x00, 0x02, 0x04, 0x06 });

var x = File.ReadAllBytes("C:\\Temp\\Reflections_Demo\\README.txt");
.somefile:
//@Bytes(x.Take(10));

//@Words(new ushort[] { 0xffff, 0x00, 0xff00});
//@Words(new short[] { 1000, -1000});

.endscope

